//
// Mixins for generation of cell sizes.
//

// Calculate a width that depends upon the numeric value in the $dictionary map.

@function calc-width($index) {
  @return 100% * ($index / $cells-per-row);
}

// Get the width for a cell.

@mixin cell-size($index) {
  width: calc-width($index);
}

// Get the margin for a specific offset.

@mixin offset-size($index) {
  margin-left: calc-width($index);
}

// Construct a human readable size name.

@function size-name-by-index($index) {
  $share-name: map-get($share-names, $cells-per-row);
  $shares: map-get($number-names, $index);

  @if $index > 1 {
    $share-name: "#{$share-name}#{$pluralizer}";
  }

  @return "#{$shares}-#{$share-name}";
}

// Build all breakpoint cell classes for a single width.

@mixin responsize-sizes($index, $size-name) {
  @each $name, $width in $width-breakpoints {
    @media (min-width: $width) {
      .cell-#{$name}-#{$size-name} {
        @include cell-size($index);
      }

      .cell-offset-#{$name}-#{$size-name} {
        @include offset-size($index);
      }
    }
  }
}

// Build all cell classes.

@mixin build-cells() {
  @for $index from 1 through $cells-per-row {
    $size-name: size-name-by-index($index);

    .cell-#{$size-name} {
      @include cell-size($index);
    }

    .cell-offset-#{$size-name} {
      @include offset-size($index);
    }

    @if $responsive-size-classes {
      @include responsize-sizes($index, $size-name);
    }
  }
}
